$date
	Tue Nov 21 23:02:51 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module CLA_tb $end
$var wire 17 ! sum [16:0] $end
$var wire 1 " carry $end
$var reg 16 # A [15:0] $end
$var reg 16 $ B [15:0] $end
$var reg 1 % C0 $end
$var reg 1 & clk $end
$scope module a1 $end
$var wire 16 ' A [15:0] $end
$var wire 16 ( B [15:0] $end
$var wire 1 % C0 $end
$var wire 1 & clk $end
$var wire 16 ) s [15:0] $end
$var wire 17 * Sum [16:0] $end
$var wire 1 " Carry $end
$var reg 16 + c [15:0] $end
$var reg 16 , g [15:0] $end
$var reg 16 - p [15:0] $end
$var integer 32 . i [31:0] $end
$scope begin genblk1[0] $end
$scope module a1 $end
$var wire 1 / C $end
$var wire 1 0 P $end
$var wire 1 1 sum $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$scope module a1 $end
$var wire 1 2 C $end
$var wire 1 3 P $end
$var wire 1 4 sum $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$scope module a1 $end
$var wire 1 5 C $end
$var wire 1 6 P $end
$var wire 1 7 sum $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$scope module a1 $end
$var wire 1 8 C $end
$var wire 1 9 P $end
$var wire 1 : sum $end
$upscope $end
$upscope $end
$scope begin genblk1[4] $end
$scope module a1 $end
$var wire 1 ; C $end
$var wire 1 < P $end
$var wire 1 = sum $end
$upscope $end
$upscope $end
$scope begin genblk1[5] $end
$scope module a1 $end
$var wire 1 > C $end
$var wire 1 ? P $end
$var wire 1 @ sum $end
$upscope $end
$upscope $end
$scope begin genblk1[6] $end
$scope module a1 $end
$var wire 1 A C $end
$var wire 1 B P $end
$var wire 1 C sum $end
$upscope $end
$upscope $end
$scope begin genblk1[7] $end
$scope module a1 $end
$var wire 1 D C $end
$var wire 1 E P $end
$var wire 1 F sum $end
$upscope $end
$upscope $end
$scope begin genblk1[8] $end
$scope module a1 $end
$var wire 1 G C $end
$var wire 1 H P $end
$var wire 1 I sum $end
$upscope $end
$upscope $end
$scope begin genblk1[9] $end
$scope module a1 $end
$var wire 1 J C $end
$var wire 1 K P $end
$var wire 1 L sum $end
$upscope $end
$upscope $end
$scope begin genblk1[10] $end
$scope module a1 $end
$var wire 1 M C $end
$var wire 1 N P $end
$var wire 1 O sum $end
$upscope $end
$upscope $end
$scope begin genblk1[11] $end
$scope module a1 $end
$var wire 1 P C $end
$var wire 1 Q P $end
$var wire 1 R sum $end
$upscope $end
$upscope $end
$scope begin genblk1[12] $end
$scope module a1 $end
$var wire 1 S C $end
$var wire 1 T P $end
$var wire 1 U sum $end
$upscope $end
$upscope $end
$scope begin genblk1[13] $end
$scope module a1 $end
$var wire 1 V C $end
$var wire 1 W P $end
$var wire 1 X sum $end
$upscope $end
$upscope $end
$scope begin genblk1[14] $end
$scope module a1 $end
$var wire 1 Y C $end
$var wire 1 Z P $end
$var wire 1 [ sum $end
$upscope $end
$upscope $end
$scope begin genblk1[15] $end
$scope module a1 $end
$var wire 1 \ C $end
$var wire 1 ] P $end
$var wire 1 ^ sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
x^
x]
x\
x[
xZ
xY
xX
xW
xV
xU
xT
xS
xR
xQ
xP
xO
xN
xM
xL
xK
xJ
xI
xH
xG
xF
xE
xD
xC
xB
xA
x@
x?
x>
x=
x<
x;
x:
x9
x8
x7
x6
x5
x4
x3
x2
x1
x0
x/
bx .
bx -
bx ,
bx +
bx *
bx )
b0 (
b0 '
0&
0%
b0 $
b0 #
x"
bx !
$end
#1000
0^
0[
0X
0U
0R
0O
0L
0I
0F
0C
0@
0=
0:
07
04
b0 )
01
0]
0\
0"
b0 !
b0 *
0Z
0Y
0W
0V
0T
0S
0Q
0P
0N
0M
0K
0J
0H
0G
0E
0D
0B
0A
0?
0>
0<
0;
09
08
06
05
03
02
00
0/
b0 ,
b0 -
b10000 .
b0 +
1&
#2000
0&
#3000
b10000 .
1&
#4000
0&
#5000
b10000 .
1&
#6000
0&
#7000
b10000 .
1&
#8000
0&
#9000
b10000 .
1&
#10000
0&
#11000
b10000 .
1&
#12000
0&
#13000
b10000 .
1&
#14000
0&
#15000
b10000 .
1&
#16000
0&
#17000
b10000 .
1&
#18000
0&
#19000
b10000 .
1&
#20000
0&
b10101001101110 $
b10101001101110 (
b1110111010101101 #
b1110111010101101 '
#21000
1U
1R
1I
1=
1:
14
b1100100011011 )
11
1]
1\
1"
b10001100100011011 !
b10001100100011011 *
1Z
1Y
1S
1P
1N
1M
1G
1E
1D
1B
1A
1;
18
13
10
b1101110111011000 +
b10101000101100 ,
b1100010011000011 -
b10000 .
1&
#22000
0&
#23000
b10000 .
1&
#24000
0&
#25000
b10000 .
1&
#26000
0&
#27000
b10000 .
1&
#28000
0&
#29000
b10000 .
1&
#30000
0&
#31000
b10000 .
1&
#32000
0&
#33000
b10000 .
1&
#34000
0&
#35000
b10000 .
1&
#36000
0&
#37000
b10000 .
1&
#38000
0&
#39000
b10000 .
1&
#40000
0&
b1111111111111111 $
b1111111111111111 (
b1101010111011011 #
b1101010111011011 '
#41000
1^
1[
0R
1O
1F
1C
b11101010111011010 !
b11101010111011010 *
b1101010111011010 )
01
0]
0Z
1W
1V
1Q
0N
1K
1J
0E
0B
1?
1>
16
15
03
12
00
b1111111111111110 +
b1101010111011011 ,
b10101000100100 -
b10000 .
1&
#42000
0&
#43000
b10000 .
1&
#44000
0&
#45000
b10000 .
1&
#46000
0&
#47000
b10000 .
1&
#48000
0&
#49000
b10000 .
1&
#50000
0&
#51000
b10000 .
1&
#52000
0&
#53000
b10000 .
1&
#54000
0&
#55000
b10000 .
1&
#56000
0&
#57000
b10000 .
1&
#58000
0&
#59000
b10000 .
1&
#60000
0&
#61000
b10000 .
1&
#62000
0&
#63000
b10000 .
1&
#64000
0&
#65000
b10000 .
1&
#66000
0&
#67000
b10000 .
1&
#68000
0&
#69000
b10000 .
1&
#70000
0&
#71000
b10000 .
1&
#72000
0&
#73000
b10000 .
1&
#74000
0&
#75000
b10000 .
1&
#76000
0&
#77000
b10000 .
1&
#78000
0&
#79000
b10000 .
1&
#80000
0&
#81000
b10000 .
1&
#82000
0&
#83000
b10000 .
1&
#84000
0&
#85000
b10000 .
1&
#86000
0&
#87000
b10000 .
1&
#88000
0&
#89000
b10000 .
1&
#90000
0&
#91000
b10000 .
1&
#92000
0&
#93000
b10000 .
1&
#94000
0&
#95000
b10000 .
1&
#96000
0&
#97000
b10000 .
1&
#98000
0&
#99000
b10000 .
1&
#100000
0&
#101000
b10000 .
1&
#102000
0&
#103000
b10000 .
1&
#104000
0&
#105000
b10000 .
1&
#106000
0&
#107000
b10000 .
1&
#108000
0&
#109000
b10000 .
1&
#110000
0&
#111000
b10000 .
1&
#112000
0&
#113000
b10000 .
1&
#114000
0&
#115000
b10000 .
1&
#116000
0&
#117000
b10000 .
1&
#118000
0&
#119000
b10000 .
1&
#120000
0&
#121000
b10000 .
1&
#122000
0&
#123000
b10000 .
1&
#124000
0&
#125000
b10000 .
1&
#126000
0&
#127000
b10000 .
1&
#128000
0&
#129000
b10000 .
1&
#130000
0&
#131000
b10000 .
1&
#132000
0&
#133000
b10000 .
1&
#134000
0&
#135000
b10000 .
1&
#136000
0&
#137000
b10000 .
1&
#138000
0&
#139000
b10000 .
1&
#140000
0&
