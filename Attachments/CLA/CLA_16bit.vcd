$date
	Wed Nov 22 00:17:58 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module CLA_16bit_tb $end
$var wire 18 ! sum [17:0] $end
$var wire 1 " carry $end
$var reg 17 # A [16:0] $end
$var reg 17 $ B [16:0] $end
$var reg 1 % C0 $end
$var reg 1 & clk $end
$scope module a1 $end
$var wire 17 ' A [16:0] $end
$var wire 17 ( B [16:0] $end
$var wire 1 % C0 $end
$var wire 1 & clk $end
$var wire 17 ) s [16:0] $end
$var wire 18 * Sum [17:0] $end
$var wire 1 " Carry $end
$var reg 18 + c [17:0] $end
$var reg 17 , g [16:0] $end
$var reg 17 - p [16:0] $end
$var integer 32 . i [31:0] $end
$scope begin genblk1[0] $end
$scope module a1 $end
$var wire 1 / C $end
$var wire 1 0 P $end
$var wire 1 1 sum $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$scope module a1 $end
$var wire 1 2 C $end
$var wire 1 3 P $end
$var wire 1 4 sum $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$scope module a1 $end
$var wire 1 5 C $end
$var wire 1 6 P $end
$var wire 1 7 sum $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$scope module a1 $end
$var wire 1 8 C $end
$var wire 1 9 P $end
$var wire 1 : sum $end
$upscope $end
$upscope $end
$scope begin genblk1[4] $end
$scope module a1 $end
$var wire 1 ; C $end
$var wire 1 < P $end
$var wire 1 = sum $end
$upscope $end
$upscope $end
$scope begin genblk1[5] $end
$scope module a1 $end
$var wire 1 > C $end
$var wire 1 ? P $end
$var wire 1 @ sum $end
$upscope $end
$upscope $end
$scope begin genblk1[6] $end
$scope module a1 $end
$var wire 1 A C $end
$var wire 1 B P $end
$var wire 1 C sum $end
$upscope $end
$upscope $end
$scope begin genblk1[7] $end
$scope module a1 $end
$var wire 1 D C $end
$var wire 1 E P $end
$var wire 1 F sum $end
$upscope $end
$upscope $end
$scope begin genblk1[8] $end
$scope module a1 $end
$var wire 1 G C $end
$var wire 1 H P $end
$var wire 1 I sum $end
$upscope $end
$upscope $end
$scope begin genblk1[9] $end
$scope module a1 $end
$var wire 1 J C $end
$var wire 1 K P $end
$var wire 1 L sum $end
$upscope $end
$upscope $end
$scope begin genblk1[10] $end
$scope module a1 $end
$var wire 1 M C $end
$var wire 1 N P $end
$var wire 1 O sum $end
$upscope $end
$upscope $end
$scope begin genblk1[11] $end
$scope module a1 $end
$var wire 1 P C $end
$var wire 1 Q P $end
$var wire 1 R sum $end
$upscope $end
$upscope $end
$scope begin genblk1[12] $end
$scope module a1 $end
$var wire 1 S C $end
$var wire 1 T P $end
$var wire 1 U sum $end
$upscope $end
$upscope $end
$scope begin genblk1[13] $end
$scope module a1 $end
$var wire 1 V C $end
$var wire 1 W P $end
$var wire 1 X sum $end
$upscope $end
$upscope $end
$scope begin genblk1[14] $end
$scope module a1 $end
$var wire 1 Y C $end
$var wire 1 Z P $end
$var wire 1 [ sum $end
$upscope $end
$upscope $end
$scope begin genblk1[15] $end
$scope module a1 $end
$var wire 1 \ C $end
$var wire 1 ] P $end
$var wire 1 ^ sum $end
$upscope $end
$upscope $end
$scope begin genblk1[16] $end
$scope module a1 $end
$var wire 1 _ C $end
$var wire 1 ` P $end
$var wire 1 a sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
xa
x`
x_
x^
x]
x\
x[
xZ
xY
xX
xW
xV
xU
xT
xS
xR
xQ
xP
xO
xN
xM
xL
xK
xJ
xI
xH
xG
xF
xE
xD
xC
xB
xA
x@
x?
x>
x=
x<
x;
x:
x9
x8
x7
x6
x5
x4
x3
x2
x1
x0
x/
bx .
bx -
bx ,
bx +
bx *
bx )
b0 (
b0 '
0&
0%
b0 $
b0 #
x"
bx !
$end
#1
0a
0^
0[
0X
0U
0R
0O
0L
0I
0F
0C
0@
0=
0:
07
04
b0 )
01
0"
b0 !
b0 *
0`
0_
0]
0\
0Z
0Y
0W
0V
0T
0S
0Q
0P
0N
0M
0K
0J
0H
0G
0E
0D
0B
0A
0?
0>
0<
0;
09
08
06
05
03
02
00
0/
b0 ,
b0 -
b10001 .
b0 +
1&
#2
0&
#3
b10001 .
1&
#4
0&
#5
b10001 .
1&
#6
0&
#7
b10001 .
1&
#8
0&
#9
b10001 .
1&
#10
0&
#11
b10001 .
1&
#12
0&
#13
b10001 .
1&
#14
0&
#15
b10001 .
1&
#16
0&
#17
b10001 .
1&
#18
0&
#19
b10001 .
1&
#20
0&
b1111000010101110 $
b1111000010101110 (
b1101111000111010 #
b1101111000111010 '
#21
1a
1^
1[
1R
1O
1L
1F
1C
1@
b11100111011101000 !
b11100111011101000 *
b11100111011101000 )
1:
1_
1\
1Y
1W
1V
1Q
1N
1K
1E
1A
1>
1<
1;
18
16
15
b10111010010100 -
b11110000001111100 +
b1101000000101010 ,
b10001 .
1&
#22
0&
#23
b10001 .
1&
#24
0&
#25
b10001 .
1&
#26
0&
#27
b10001 .
1&
#28
0&
#29
b10001 .
1&
#30
0&
#31
b10001 .
1&
#32
0&
#33
b10001 .
1&
#34
0&
#35
b10001 .
1&
#36
0&
#37
b10001 .
1&
#38
0&
#39
b10001 .
1&
#40
0&
#41
b10001 .
1&
#42
0&
#43
b10001 .
1&
#44
0&
#45
b10001 .
1&
#46
0&
#47
b10001 .
1&
#48
0&
#49
b10001 .
1&
#50
0&
#51
b10001 .
1&
#52
0&
#53
b10001 .
1&
#54
0&
#55
b10001 .
1&
#56
0&
#57
b10001 .
1&
#58
0&
#59
b10001 .
1&
#60
0&
#61
b10001 .
1&
#62
0&
#63
b10001 .
1&
#64
0&
#65
b10001 .
1&
#66
0&
#67
b10001 .
1&
#68
0&
#69
b10001 .
1&
#70
0&
#71
b10001 .
1&
#72
0&
#73
b10001 .
1&
#74
0&
#75
b10001 .
1&
#76
0&
#77
b10001 .
1&
#78
0&
#79
b10001 .
1&
#80
0&
#81
b10001 .
1&
#82
0&
#83
b10001 .
1&
#84
0&
#85
b10001 .
1&
#86
0&
#87
b10001 .
1&
#88
0&
#89
b10001 .
1&
#90
0&
#91
b10001 .
1&
#92
0&
#93
b10001 .
1&
#94
0&
#95
b10001 .
1&
#96
0&
#97
b10001 .
1&
#98
0&
#99
b10001 .
1&
#100
0&
#101
b10001 .
1&
#102
0&
#103
b10001 .
1&
#104
0&
#105
b10001 .
1&
#106
0&
#107
b10001 .
1&
#108
0&
#109
b10001 .
1&
#110
0&
#111
b10001 .
1&
#112
0&
#113
b10001 .
1&
#114
0&
#115
b10001 .
1&
#116
0&
#117
b10001 .
1&
#118
0&
#119
b10001 .
1&
#120
0&
